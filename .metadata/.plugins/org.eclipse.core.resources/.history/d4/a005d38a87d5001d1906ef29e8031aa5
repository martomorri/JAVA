package poo;

import java.util.*;

public class Test {

	public static void main(String[] args) {
		
		Persona[] personas = new Persona[2];
		personas[0] = new Empleado2("Luciano", 20000, 2005, 9, 28);
		personas[1] = new Alumno("Martin", "Ingenieria en Sistemas");
		
		for (Persona item: personas) {
			System.out.println(item.getNombre() + ": " + item.getDescripcion());
		}
	}

}

/* Una clase abstracta es una clase que admite metodos abstractos, es decir, metodos que compartiran
 * todas las subclases, pero que estas deberan sobrescribir luego
 * */
abstract class Persona {
	private String nombre;
	
	public Persona(String nombre) {
		this.nombre = nombre;
	}
	
	public String getNombre() {
		return nombre;
	}
	
	// Un metodo abstracto solo se construye, no se define, no lleva llaves
	public abstract String getDescripcion();
}

class Empleado2 extends Persona {
	private int id;
	private static int idSiguiente = 1;
	private double sueldo;
	private Date fecha_alta;
	
	public Empleado2(String nombre, double sueldo, int ano, int mes, int dia) {
		super(nombre);
		this.sueldo = sueldo;
		GregorianCalendar fecha = new GregorianCalendar(ano, mes-1, dia);
		fecha_alta = fecha.getTime();
		id = idSiguiente;
		idSiguiente++;
	}
	
	public double getSueldo() {
		return sueldo;
	}
	
	public Date getFechaContrato() {
		return fecha_alta;
	}
	
	public void subirSueldo(double porcentaje) {
		sueldo += sueldo*porcentaje/100;
	}
	
	public String getDescripcion() {
		return "Este empleado tiene el Id: " + id + " y tiene un sueldo de " + sueldo;
	}
}

class Alumno extends Persona {
	
	private String carrera;
	
	public Alumno(String nombre, String carrera) {
		super(nombre);
		this.carrera = carrera;
	}
	
	public String getDescripcion() {
		return "Este alumno cursa " + carrera;
	}
	
}
